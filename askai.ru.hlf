.Language=Russian,Russian (Русский)
.PluginContents=Ask AI
.Options CtrlStartPosChar=§¦


@Contents
$ #Ask AI – макрос для взаимодействия с ChatGPT (и другими LLM-сервисами) в FAR#

 Этот макрос – дальнейшее развитие #bito.ai code assistant# (~см.~@https://forum.farmanager.com/viewtopic.php?t=13283@),
с поддержкой множества утилит и LLM-сервисов,
 и возможностью настройки разнообразных параметров.

 Макрос назначен на #Ctrl+B#. Также может быть запущен в качестве скрипта ~LuaShell~@https://forum.farmanager.com/viewtopic.php?f=15&t=10907@.

 #Ctrl+B:Double# позволяет в любой момент открыть окно с выводом повторно.

 #Функции:#

 #•# §¦Ввод #запроса# в диалоге, ранее набранные приглашения доступны в истории поля ввода.
   §¦В #диалоге# доступны также такие действия:
     #•# §¦(Опциональная) возможность работы #в единой сессии#, с сохранением предыдущего контекста.
       §¦Состояние #[?]# означает что сессия продолжается пока открыт редактор с выводом.
       §¦Сессию также можно в любой момент #обнулить# кнопкой “#-#”.
     #•# §¦#Форматирование вывода#, по заданной границе, или по ширине окна (состояние #[?]#).
       §¦Примечание: блоки кода не форматируются.
     #•# §¦Установка различных #параметров# генерации (в зависимости от используемой утилиты).
       §¦Значения запоминаются в истории, и легко доступны для повторного выбора.
       §¦Некоторые параметры специфичны для отдельной утилиты, другие могут разделяться между разными
(посредством общей истории).
     #•# §¦Набор параметров легко меняется через файлы #определений# (*.lua.cfg), доступные прямо из диалога.
     #•# §¦Некоторые утилиты держат свою #конфигурацию в собственных файлах#,
открыть такой конфиг-файл тоже можно прямо из диалога.
     #•# §¦Возможность установки #переменных окружения#, необходимых для отдельных утилит.
 #•# §¦Вместе с запросом передаётся #выделенный в редакторе текст#.
   §¦Если в запросе присутствует шаблон #{{%input%}}#, то он заменяется выделенным текстом.
   §¦В противном случае текст выбранный в редакторе добавляется в конец запроса.

 #Дополнительные макросы#, активные в окне с выводом:

 #•# §¦#Ctrl+Shift+Ins#:
     #•# §¦скопировать выделенный текст, склеив свёрнутые строки обратно в параграфы;
     #•# §¦при отсутствии выделения ищет и обрабатывает блок кода под курсором.
 #•# §¦#Alt+F2# полностью убрать форматирование (свёртку).

 Доступ к сервисам реализуется посредством (произвольных) консольных утилит,
либо напрямую через ~OpenAI API~@https://platform.openai.com/docs/api-reference@ (опционально), см. раздел ~Установка~@Install@.

 Каждый из LLM-сервисов имеет свои достоинства и недостатки, поэтому ~выбор~@Utilities@ остаётся за пользователем.

@=

 Другие разделы справки: [~Установка~@Install@], [~Меню выбора утилиты~@UtilitiesMenu@], [~Обзор поддерживаемых утилит~@Utilities@], [~i~@index@]


@Install
$ #Установка#

 #•# §¦Содержимое архива разместить в отдельной директории, где-то в #Macros/scripts#.
 #•# §¦Для ~LuaShell~@https://forum.farmanager.com/viewtopic.php?f=15&t=10907@ – стандартным образом, т.е. где-то в #Macros/utils#,
или в любой другой директории, доступной через #%PATH%#.
 #•# §¦Для запуска утилит рекомендуется модуль ~Piper~@https://forum.farmanager.com/viewtopic.php?p=167895##p167895@
(положить в #modules#).
   §¦В случае его отсутствия для запуска будет использована стандартная функция ~io.popen~@https://www.lua.org/manual/5.1/manual.html##pdf-io.popen@, в сочетании
   §¦с созданием временных файлов, и перенаправлением их в стандартный ввод посредством команд shell.
 #•# §¦В #%PATH%# должны быть ~утилиты~@Utilities@, соответствующие имеющимся файлам #определений# (*.lua.cfg),
   §¦см. раздел ~Меню выбора утилиты~@UtilitiesMenu@.
 #•# §¦(Опционально) Для доступа к сервисам, использующим #REST API# совместимый с ~OpenAI~@https://platform.openai.com/@,
служит конфигурация #lua-openai.lua.cfg#.
   §¦Для работы с сетью необходимы такие модули:
     #•# §¦#LuaSocket#, #LuaSec#: ~https://github.com/FarManagerLegacy/LuaBinaries/releases~@https://github.com/FarManagerLegacy/LuaBinaries/releases@
       §¦и их зависимости: ~OpenSSL~@https://slproweb.com/products/Win32OpenSSL.html@, (для некоторых билдов) ~MS Visual C++ Redist~@https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170##latest-microsoft-visual-c-redistributable-version@.
     #•# §¦#Lua CJSON#: можно извлечь из дистрибутива ~OpenResty~@https://openresty.org/en/download.html##windows@:
       §¦#lualib\cjson.so# переименовать в #cjson.dll# и положить в #Macros\lib64# (#lib32# для Far x86).


 #Настройка#

 Большая часть утилит требует задания некоторых параметров.

 В частности, при использовании сервисов c ~OpenAI~@https://platform.openai.com/@-совместимым API
важны параметры #api key# и #api base#,
их значения можно узнать на сайте соответствующих провайдеров.

 В зависимости от утилиты, параметры надо установить или через конфиг-файл
(#F4# в списке ~выбора~@UtilitiesMenu@),
или как #аргументы# командной строки (доступные в ~диалоге~@Contents@),
или через #переменные окружения# (также доступны в ~диалоге~@Contents@).

@=

 Другие разделы справки: [~Основные функции~@Contents@], [~Меню выбора утилиты~@UtilitiesMenu@], [~Обзор поддерживаемых утилит~@Utilities@], [~i~@index@]


@UtilitiesMenu
$ #Меню выбора утилиты#

 В комплекте идут #определения# для нескольких опробованных мной утилит/сервисов,
но легко добавить новые.

 #•# §¦Выбор утилиты осуществляется через #меню#, доступное как прямо из ~диалога~@Contents@,
так и отовсюду посредством макроса.
   §¦Выбор запоминается.
   §¦По умолчанию список содержит только установленные утилиты, полный список – по #Ctrl+H#.
 #•# §¦Утилиты необходимо скачать самостоятельно (соответствующий сайт открывается по #Alt+F1# из меню).
   §¦С некоторыми соображениями по выбору утилиты можно ознакомиться ~тут~@Utilities@.
 #•# §¦Утилитам может требоваться ~настройка~@Install@ помимо параметров в диалоге,
подробнее см. в собственной их документации.
   §¦Быстрый доступ к файлу конфигурации (если применимо) - #F4# в меню, или по кнопке в ~диалоге~@Contents@.
 #•# §¦По кнопке #Alt+F4# - быстрый доступ к файлу с #определением# той или иной утилиты (*.lua.cfg)

@=

 Другие разделы справки: [~Основные функции~@Contents@], [~Установка~@Install@], [~Обзор поддерживаемых утилит~@Utilities@], [~i~@index@]


@Utilities
$ #Обзор поддерживаемых утилит#

 #Не требующие начальной настройки#

 ~tgpt~@https://github.com/aandrew-me/tgpt@, ~pytgpt~@https://github.com/Simatwa/python-tgpt@

 Недостаток: не гарантирована стабильность (иногда требуется обновление утилит).


 #Официальные утилиты от поставщика API#

 ~bito~@https://bito.ai/@

 Настройка описана ~тут~@https://forum.farmanager.com/viewtopic.php?t=13283@.

 Недостаток: бесплатный лимит 20 сообщений в день.


 #Утилиты, работающие с OpenAI API (и совместимыми)#

 ~aichat~@https://github.com/sigoden/aichat@,
~chatgpt-cli~@https://github.com/kardolus/chatgpt-cli@,
~mods~@https://github.com/charmbracelet/mods@,
~sgpt~@https://github.com/tbckr/sgpt@
или напрямую через сеть (требуется ~Установка~@Install@ соответствующих lua-модулей).

 Для их использования важны параметры #api key# и #api base#,
их значения можно узнать на сайте соответствующих провайдеров.

 См. также раздел ~Настройка~@Install@.


 #OpenAI#

 ~OpenAI~@https://platform.openai.com/@ – оригинальный разработчик ChatGPT, #gpt-3.5-turbo#, #gpt-4#.

 Предоставляется начальный кредит $5, после исчерпания доступно только платное использование.


 #Совместимые#

 Например:

 #•# §¦~groq~@https://console.groq.com/playground@
     #•# §¦api: #https://api.groq.com/openai/v1#
     #•# §¦модели: ~https://console.groq.com/docs/models~@https://console.groq.com/docs/models@
 #•# §¦~OpenRouter~@https://openrouter.ai/@
     #•# §¦api: #https://openrouter.ai/api/v1#
     #•# §¦целый ряд бесплатных ~моделей~@https://openrouter.ai/docs/models@ (присутствуют ограничения):

 #      meta-llama/llama-3.1-8b-instruct:free#
 #      google/gemma-2-9b-it:free#
 #      qwen/qwen-2-7b-instruct:free#
 #      microsoft/phi-3-mini-128k-instruct:free#
 #      microsoft/phi-3-medium-128k-instruct:free#
 #      meta-llama/llama-3-8b-instruct:free#
 #      google/gemma-7b-it:free#
 #      nousresearch/nous-capybara-7b:free#
 #      openchat/openchat-7b:free#
 #      gryphe/mythomist-7b:free#
 #      undi95/toppy-m-7b:free#
 #      huggingfaceh4/zephyr-7b-beta:free#
 #      mistralai/mistral-7b-instruct:free#
 #•# §¦~Lepton AI~@https://www.lepton.ai/playground@

 Существуют и другие провайдеры, предоставляющие совместимый интерфейс.

 В том числе, возможна локальная работа (~LocalAI~@https://github.com/mudler/LocalAI@ и др.), но аппаратные требования высокие.


 #Адаптеры#

 Есть множество сервисов, преобразующих к формату OpenAI какие-либо другие варианты
доступа к моделям.

 Ниже приводятся два примера:

 #•# §¦~openai-gemini~@https://habr.com/ru/articles/798123/@: Google Gemini – официально и бесплатно!
 #•# §¦~openai-github-copilot~@https://habr.com/ru/articles/799215/@: Github Copilot – доступ к #gpt-4#, для ряда категорий пользователей бесплатно (см.)

@=

 Другие разделы справки: [~Основные функции~@Contents@], [~Установка~@Install@], [~Меню выбора утилиты~@UtilitiesMenu@], [~i~@index@]


@index
$ #Index#

 #•# §¦~Ask AI – макрос для взаимодействия с ChatGPT (и другими LLM-сервисами) в FAR~@Contents@
 #•# §¦~Установка~@Install@
     #•# §¦Настройка
 #•# §¦~Меню выбора утилиты~@UtilitiesMenu@
 #•# §¦~Обзор поддерживаемых утилит~@Utilities@
     #•# §¦Не требующие начальной настройки
     #•# §¦Официальные утилиты от поставщика API
     #•# §¦Утилиты, работающие с OpenAI API (и совместимыми)
         #•# §¦OpenAI
         #•# §¦Совместимые
         #•# §¦Адаптеры