.Language=Russian,Russian (Русский)
.PluginContents=Ask AI
.Options CtrlStartPosChar=§¦


@Contents
$ #Ask AI – макрос для взаимодействия с ChatGPT (и другими LLM-сервисами) в FAR#

 Этот макрос – дальнейшее развитие #bito.ai code assistant# (~см.~@https://forum.farmanager.com/viewtopic.php?t=13283@),
теперь с поддержкой множества LLM-сервисов.

 Доступ к сервисам возможен как посредством разнообразных консольных утилит, так и напрямую через REST API.

 Каждый из LLM-сервисов имеет свои достоинства и недостатки – ~выбор~@Services@ за пользователем.

 Макрос назначен на #Ctrl+B# и открывает ~диалог~@Dialog@ для ввода запроса и настройки параметров генерации.
При этом выделение редактора передаётся в качестве контекста.

 Может быть также запущен в качестве скрипта ~LuaShell~@https://forum.farmanager.com/viewtopic.php?f=15&t=10907@.

 #Вывод# ответа осуществляется в отдельном редакторе.

     Макросы, активные в окне с выводом:

     #•# §¦#Ctrl+Shift+Ins#:
         #•# §¦скопировать выделенный текст, склеив свёрнутые строки обратно в параграфы;
         #•# §¦при отсутствии выделения ищет и обрабатывает блок кода под курсором.
     #•# §¦#Alt+F2# полностью убрать форматирование (свёртку).

 #Ctrl+B:Double# позволяет в любой момент открыть окно с выводом повторно.

 Если выделен текст, то нажатие #Ctrl+B:Hold# продолжает чат без открытия диалога,
передавая выделение в качестве нового запроса.

 #Примечание#: составные сочетания типа #Ctrl+B:Double# предполагают использование модуля ~MacroEx~@https://forum.farmanager.com/viewtopic.php?f=15&t=8764@.
 Альтернативно, можно заменить сочетание на простое через параметр #keyOutput#.
 Его можно изменить прямо в коде (в начале скрипта), либо воспользоваться возможностями ~ScriptsBrowser~@https://forum.farmanager.com/viewtopic.php?f=15&t=10418@/#cfgscript#.

@=

 Другие разделы справки: [~Диалог~@Dialog@], [~Установка~@Install@], [~Меню выбора провайдера~@ProvidersMenu@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@Dialog
$ #Диалог#

 Диалог служит для ввода #запроса# и настройки различных параметров.
 Ранее набранные приглашения доступны в истории поля ввода.
 Для удобного редактирования объёмных/многострочных запросов рекомендуется макрос
~EditBoxToEditor~@https://forum.farmanager.com/viewtopic.php?p=178783##p178783@.

 Вместе с запросом передаётся #выделенный в редакторе текст#.
 Если в запросе присутствует шаблон #{{%input%}}#, то выделенный текст подставляется на его место.
 В противном случае выделенный текст добавляется в конец запроса.

 Последующие запросы учитывают предыдущий контекст, образуя диалог (#сессию#), если не настроено иное.

 На верхней рамке диалога отображается имя текущего ~профиля~@Profiles@,
перейти к нему можно не только курсорными клавишами, но и по #CtrlHome#.

 В поле редактирования запроса можно переместиться с помощью хоткея или нажатием #PgUp#.

 Примечание: повторные нажатия #CtrlHome# / #PgUp# переключают фокус между полями профиля / запроса.

 Доступны такие #настройки#:

 #•# §¦#Session# - по умолчанию (состояние #[?]#) сессия продолжается, пока открыт редактор с ~выводом~@Contents@.
   §¦Также сессию можно в любой момент принудительно #очистить# кнопкой “#-#”.
 #•# §¦#Timeout# - предельное время ожидания ответа на запрос (для “нативных” конфигураций).
 #•# §¦#Форматирование вывода# по заданной границе или по ширине окна (состояние #[?]#).
   §¦Блоки кода не форматируются.
 #•# §¦Установка различных #параметров# генерации (в зависимости от выбранного сервиса/утилиты).
   §¦Значения запоминаются в истории и легко доступны для повторного выбора.
   §¦Некоторые параметры специфичны для отдельной #конфигурации#, другие могут разделяться между разными
(посредством общей истории).
 #•# §¦Возможность установки #переменных окружения#, необходимых для отдельных утилит.

 #Кнопки#:

 #•# §¦#[ Utility cfg ]# доступна в случае, если используемая активной конфигурацией утилита
держит #настройки в собственном файле#; нажатие кнопки позволяет открыть его в редакторе.
 #•# §¦#[ Presets - F5 ]# позволяет подставить сразу несколько параметров набором (“пресетом”).
   §¦По нажатию кнопки открывается ~Список пресетов~@Presets@.
 #•# §¦#[ Models - F6 ]# запрашивает список #моделей# через API, если это предусмотрено конфигурацией,
в противном случае кнопка недоступна.
   §¦Также фиксированный список моделей может быть уже предварительно занесён в историю поля ввода
(актуально для некоторых пресетов и конфигураций).
 #•# §¦#[ Providers - ^B ]# или же повторное нажатие #Ctrl+B# позволяет переключиться на другую конфигурацию,
открывая ~Меню выбора конфигурации провайдера~@ProvidersMenu@.
 #•# §¦#{ Go! }# или #Enter# – запуск генерации ответа модели, ~вывод~@Contents@ открывается в отдельном редакторе.

 Дополнительные шорткаты:

 #•# §¦#Shift+F4# - задать заголовки запроса (для #OpenAI-compatible#) в виде таблицы Lua или Moonscript
(удобно использовать #~single line table literal~@https://moonscript.org/reference/##the-language/table-literals@#).
 #•# §¦#Shift+F5# - открыть историю поля #apibase#.
 #•# §¦#Shift+F6# - открыть отсортированный в алфавитном порядке список истории моделей.
 #•# §¦#Ctrl+H# - переключение между полным и “компактным” режимом диалога
(без параметров конфигурации и кнопок).
 #•# §¦#Alt+F4# - открывает в редакторе файл активной конфигурации провайдера (*.lua.cfg),
например при необходимости изменить набор доступных параметров.

 По умолчанию диалог открывается в полном режиме, но это можно изменить опцией #compactDlg#,
которая находится в начале скрипта.
 Помимо этого там же можно настроить шорткаты для вызова макросов и некоторые другие параметры.

 А чтобы после каждого обновления скрипта не приходилось вручную восстанавливать
изменённые значения, рекомендуется использовать возможности #cfgscript# из пакета
~ScriptsBrowser~@https://forum.farmanager.com/viewtopic.php?f=15&t=10418@.

@=

 Другие разделы справки: [~Описание~@Contents@], [~Установка~@Install@], [~Меню выбора провайдера~@ProvidersMenu@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@Profiles
$ #Профили#

 По существу #профиль# представляет собой именованный набор значений, сохраняемых в истории соответствующих
полей ввода.

 Профили задуманы как средство для выполнения “быстрых действий” с использованием макросов (см. ниже),
и без этого не несут большой ценности, т.к. для обычного свободного чата достаточно штатного выбора
из истории.

 На практике же при использовании #AskAI# часто возникают типовые повторяющиеся задачи,
которые хотелось бы выполнять максимально оперативно, с заранее заданными параметрами, не тратя внимание на ввод,
и даже не открывая диалога, если например все исходные данные содержатся в выделенном тексте.

 Для обеспечения этого и задуманы профили.


 #Управление#

 Текущий профиль отображается на верхней рамке, быстро перейти в поле для редактирования можно нажатием
#Ctrl+Home#; если ввести имя несуществующего профиля, то он будет создан.

 Выбрать существующий профиль можно из выпадающего списка, по #Shift+Del# в этом списке профиль можно удалить.

 Находясь в любом поле ввода с помощью #Ctrl+Up# можно открыть список истории соответствующего поля из
профиля #default#.


 #Использование#

 Предполагается, что под каждую типовую задачу заводится отдельный #профиль#, который можно вызвать одним нажатием
клавиши, используя макрос.

 Примеры макросов можно увидеть в #macros.lua.sample# (для загрузки переименовать в файл с расширением #.lua#).

 Это самый обычный макрофайл, загружаемый штатным образом, а функция #askAI# доступна в нём как модуль, через #require#.

 В макросе задаётся только имя профиля, а соответствующая роль, запрос (#prompt#), провайдер и прочее
настраиваются уже в диалоге. Введённые значения запоминаются каждый раз при закрытии диалога по #Enter#/#CtrlEnter#;
также можно сохранить их принудительно нажатием #Shift+Enter# в любой строке редактирования.

 Примечание: заранее создавать профиль нет необходимости, он будет и так открыт при вызове макроса
(сначала надо будет выбрать ~провайдера~@ProvidersMenu@).

@=

 Другие разделы справки: [~Описание~@Contents@], [~Диалог~@Dialog@], [~Установка~@Install@], [~Меню выбора провайдера~@ProvidersMenu@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@Presets
$ #Работа с пресетами#

 #Список пресетов# вызывается из ~диалога~@Dialog@ нажатием соответствующей кнопки, хоткеем, или же по #F5#.

 “Пресет” представляет собой именованный набор параметров, подставляемых в соответствующие поля диалога.
 Пресеты хранятся в файлах #*.preset# и являются Lua-файлами.

 Создать новый пресет можно нажав #Shift+F4# или #Ins#.

 Над пресетами в списке доступны следующие действия:

 #•# §¦#Enter# - заполнить поля диалога значениями из пресета.
 #•# §¦#F4# - открыть в редакторе.
 #•# §¦#F5# - скопировать, #F6# - переименовать.
 #•# §¦#F8# или #Del# - удалить.

 В списке отображаются только пресеты, подходящие для текущей конфигурации диалога:
 если в пресете содержится параметр, не имеющий соответствия в диалоге текущей конфигурации,
то такой пресет показан не будет.

 Нажатием #Ctrl+H# можно принудительно отобразить все пресеты.

 См. также: ~обзор пресетов~@Services@ для сервисов совместимых с #OpenAI API#.

@=

 Другие разделы справки: [~Описание~@Contents@], [~Диалог~@Dialog@], [~Установка~@Install@], [~Меню выбора провайдера~@ProvidersMenu@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@Install
$ #Установка#

 #•# §¦Содержимое архива разместить в отдельной директории, где-то в #Macros/scripts#.
 #•# §¦Для ~LuaShell~@https://forum.farmanager.com/viewtopic.php?f=15&t=10907@ – стандартным образом, т.е. где-то в #Macros/utils#,
или в любой другой директории, доступной через #%PATH%#.
 #•# §¦Для работы с сетью непосредственно, через “нативные” конфигурации, такие как #openai.lua.cfg#,
необходимы следующие модули:
     #•# §¦#LuaSocket#, #LuaSec#: ~https://github.com/FarManagerLegacy/LuaBinaries/releases~@https://github.com/FarManagerLegacy/LuaBinaries/releases@
       §¦и их зависимости: ~OpenSSL~@https://github.com/FarManagerLegacy/LuaBinaries/blob/main/OpenSSL.md@, ~MS Visual C++ Redist~@https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170##latest-microsoft-visual-c-redistributable-version@.
     #•# §¦Практически любой JSON модуль, предоставляющий функции #encode#/#decode#.
         #•# §¦По умолчанию ищется модуль с одним из имён: #cjson#, #rsjson#, #ljson#, #dkjson#, #lunajson#, или просто ~json~@https://luarocks.org/search?q=json@
(см. также ~lua-users wiki~@http://lua-users.org/wiki/JsonModules@).
           §¦Мною тестировались ~Lua CJSON~@https://github.com/FarManagerLegacy/LuaBinaries/@ и ~dkjson~@http://dkolf.de/dkjson-lua/@.
         #•# §¦Для явного указания имени модуля следует использовать опцию #json_module# в начале скрипта.
           §¦Её можно изменить прямо в коде, либо воспользоваться возможностями ~ScriptsBrowser~@https://forum.farmanager.com/viewtopic.php?f=15&t=10418@/#cfgscript#.
 #•# §¦Также можно работать через ~сторонние утилиты~@ProvidersMenu@:
     #•# §¦Для запуска утилит рекомендуется модуль ~Piper~@https://forum.farmanager.com/viewtopic.php?p=167895##p167895@
(положить в #modules#).
       §¦В случае его отсутствия для запуска будет использована стандартная функция ~io.popen~@https://www.lua.org/manual/5.1/manual.html##pdf-io.popen@, в сочетании
       §¦с созданием временных файлов и перенаправлением их в стандартный ввод посредством команд shell.
     #•# §¦В #%PATH%# должны быть #утилиты#, соответствующие имеющимся файлам #определений# (*.lua.cfg),
см. раздел ~Обзор утилит~@ProvidersMenu@.
 #•# §¦При работе с ~профилями~@Profiles@, чтобы при удалении профиля очищалась и связанная с ним история,
опционально можно установить модуль ~LuaSQLite3~@https://lua.sqlite.org/@,
который присутствует например в дистрибутиве плагина ~Polygon~@https://github.com/shmuz/far_plugins/releases?q=Polygon&expanded=true@.


 #Настройка#

 Большая часть #конфигураций# требует задания некоторых параметров в ~диалоге~@Dialog@.
 Наиболее важные параметры - такие как #apibase#, #apikey# и #model# - определяются выбранным ~сервисов~@Services@.

 Некоторые #утилиты# используют файл настройки, доступный как из #диалога#, так и в ~списке конфигураций~@ProvidersMenu@
(подробнее см. в документации соответствующих утилит).

@=

 Другие разделы справки: [~Описание~@Contents@], [~Диалог~@Dialog@], [~Меню выбора провайдера~@ProvidersMenu@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@ProvidersMenu
$ #Меню выбора конфигурации провайдера#

 В комплекте идут #конфигурации# для ряда опробованных мной утилит/сервисов
(но легко добавить и новые).

 С некоторыми соображениями по выбору конфигурации можно ознакомиться в разделе ~Обзор сервисов~@Services@.

 #•# §¦Выбор конфигурации осуществляется через #меню#, доступное как прямо из ~диалога~@Dialog@,
так и отовсюду посредством макроса.
   §¦Выбор запоминается.
 #•# §¦Верхний раздел списка содержит “нативные” конфигурации, работающие с сетью средствами Lua.
   §¦Раздел не будет отображаться, если отсутствуют необходимые модули, см. ~Установка~@Install@.
   §¦Стандартные конфигурации (см. ~обзор~@Services@):
#OpenAI-compatible#, #Google Gemini#, #Cohere#, #Nexra#.
 #•# §¦Нижний раздел списка содержит определения, использующие внешние утилиты (см. обзор ниже).
   §¦По умолчанию список содержит только установленные утилиты, полный список – по #Ctrl+H#.
     #•# §¦Утилиты необходимо скачать самостоятельно (соответствующий сайт открывается по #Alt+F1# из меню).
     #•# §¦Утилитам может требоваться настройка (помимо параметров в диалоге),
подробнее см. в их собственной документации.
       §¦Быстрый доступ к #файлу# с настройками (если применимо) - из меню по #F4#,
или в ~диалоге~@Dialog@ по кнопке #[ Utility cfg ]#.
 #•# §¦По #Alt+F4# - быстрый доступ к файлу с #определением# той или иной конфигурации (*.lua.cfg).

 В общем случае следует отдать предпочтение “нативным” конфигурациям, поскольку они обеспечивают больше возможностей.

 Однако в некоторых случаях может оказаться проще или удобнее работать и через утилиты, например:

 #•# §¦если соответствующая утилита уже есть (и используется из командной строки);
 #•# §¦если утилита уже содержит настройки провайдеров (как #bito#, #gh models#, #tgpt#, #pytgpt#);
 #•# §¦если пользователю проще скачать утилиту, чем выполнить другие инструкции по ~установке~@Install@.


 #Обзор утилит#

 #•# §¦~bito~@https://bito.ai/@ - настройка описана ~тут~@https://forum.farmanager.com/viewtopic.php?t=13283@.
   §¦Недостаток: бесплатный лимит 75 сообщений в день, доступ только к BASIC-модели (gpt-4o-mini).
 #•# §¦~gh models~@https://github.com/github/gh-models@ - GitHub Models extension.
   §¦Инструкции по установке см. на домашней странице.
   §¦Необходим аккаунт GitHub. Действуют ~лимиты~@https://docs.github.com/en/github-models/prototyping-with-ai-models##rate-limits@.
 #•# §¦~tgpt~@https://github.com/aandrew-me/tgpt@, ~pytgpt~@https://github.com/Simatwa/python-tgpt@ - не требуют предварительной настройки.
   §¦Недостаток: не гарантирована стабильность (иногда требуется обновление утилит).
 #•# §¦Прочие утилиты - ~aichat~@https://github.com/sigoden/aichat@, ~chatgpt-cli~@https://github.com/kardolus/chatgpt-cli@, ~mods~@https://github.com/charmbracelet/mods@, ~sgpt~@https://github.com/tbckr/sgpt@ - работают с ~OpenAI API~@https://platform.openai.com/docs/api-reference@ (и совместимыми).
   §¦Требуют задания некоторых параметров, прежде всего #apibase#, #apikey# и #model#.
Их значения зависят от выбранного ~сервиса~@Services@.
   §¦В зависимости от утилиты, параметры или надо установить через #файл# настроек (как описано выше),
или они могут быть доступны сразу в ~диалоге~@Dialog@,
если они передаются как #аргументы# командной строки, или через #переменные окружения#.
   §¦Для заполнения параметров в диалоге можно использовать ~пресеты~@Presets@, идущие в комплекте (см. ~обзор~@Services@).

@=

 Другие разделы справки: [~Описание~@Contents@], [~Диалог~@Dialog@], [~Установка~@Install@], [~Обзор онлайн-сервисов~@Services@], [~i~@index@]


@Services
$ #Обзор онлайн-сервисов#

 #Выбор модели#

 На данный момент наиболее сильные модели это:

 #•# §¦#o4#, #o3#, #o1#, #gpt-4.1# и #gpt-4o# (а также модели с суффиксами #-mini#) от ~OpenAI~@https://platform.openai.com/@;
 #•# §¦#gemini-2.5-pro# от ~Google~@https://ai.google.dev/@;
 #•# §¦#claude-3.7-sonnet# от ~Anthropic~@https://www.anthropic.com/@;
 #•# §¦#grok-3# от ~xAI~@https://x.ai/grok@;

 Из опенсорсных - все что побольше, например:

 #•# §¦из серии ~Llama~@https://www.llama.com/@ от #Meta AI#: #llama-4-maverick#, #llama-3.1-405b#, #llama-3.2-90b#, #llama-3.3-70b#;
 #•# §¦ряд моделей от китайских разработчиков также демонстрирует хорошие результаты:
~DeepSeek~@https://www.deepseek.com/@, ~Qwen~@https://qwenlm.github.io/@, #Yi# от ~01.AI~@https://www.01.ai/@, ~MiniMax~@https://www.minimaxi.com/en@.

 Ориентироваться можно по рейтингу ~ChatBot Arena~@https://lmarena.ai/?leaderboard@.


 #Обзор провайдеров#

 #•# §¦~OpenAI~@https://platform.openai.com/@ – оригинальный разработчик #ChatGPT#.
   §¦Новому пользователю предоставляется кредит $5, после исчерпания которого доступно только платное использование.
   §¦Работа с этим апи возможна как с помощью сторонних утилит, так и с помощью “нативной” конфигурации,
так и называющейся “#OpenAI-compatible#”.
 #•# §¦Другие #OpenAI#-совместимые: ~Mistral AI~@https://mistral.ai/@, ~xAI~@https://x.ai/grok@ #Grok#, ~AI21 labs~@https://www.ai21.com@ #Jamba#.
   §¦К этой же категории относится целый ряд провайдеров, предоставляющих доступ к OpenSource-моделям.
 #•# §¦Провайдеры с собственным API, такие как ~Google~@https://ai.google.dev/@ #Gemini#, ~Anthropic~@https://www.anthropic.com/@ #Claude#, ~Cohere~@https://cohere.com/command@ #Command# и т.д.
   §¦Для поддержки в #AskAI# требуется или соответствующая “нативная” конфигурация, или специальный
сервис-адаптер, который будет конвертировать API в совместимый с #OpenAI# формат.
   §¦Примеры таких сервисов: ~openai-gemini~@https://habr.com/ru/articles/798123/@, ~openai-github-copilot~@https://habr.com/ru/articles/799215/@ и др.


 #Обзор ~пресетов~@Presets@ для сервисов совместимых с ~OpenAI API~@https://platform.openai.com/docs/api-reference@#

 В комплекте со скриптом идёт набор пресетов, содержащих предварительно заданные
значения #apibase# (и начальное значение #model#).
 В большинстве случаев пользователю также требуется самостоятельно получить #apikey#,
адрес сайта для регистрации можно найти в файле пресета (открывается из списка по #F4#).

 С перечисленными ниже пресетами помимо конфигурации #openai.lua.cfg# совместимы также
конфигурации некоторых утилит (кроме тех, которые хранят эти значения в собственных файлах настроек).

 #•# §¦Не требуют ключа (#apikey#) только эти пресеты:
     #•# §¦~pollinations.ai~@https://pollinations.ai/@ (OpenAI, Gemini, DeepSeek, Qwen, Mistral, Llama, ~…~@https://text.pollinations.ai/models@)
     #•# §¦#tmrace# (#gpt-4o-mini#): лимит 50 сообщений в сутки
     #•# §¦~deepinfra~@https://deepinfra.com/models/text-generation@ (всевозможные OpenSource модели): some anonymous usage allowed
 #•# §¦Для использования других надо зарегистрироваться и получить ключ.
Следующие пресеты относятся к бесплатным сервисам (с определёнными лимитами):
     #•# §¦~cloudflare~@https://developers.cloudflare.com/workers-ai/models/@ (в основном небольшие модели, но есть и #@@cf/meta/llama-3.3-70b-instruct-fp8-fast#,
#@@cf/deepseek-ai/deepseek-r1-distill-qwen-32b#)
     #•# §¦~cohere~@https://cohere.com/command@ (серии #command-*# и #c4ai-aya-*#)
     #•# §¦~gemini~@https://ai.google.dev/gemini-api/docs/openai@ от Google
     #•# §¦~github~@https://github.com/marketplace?type=models&task=chat-completion@ (модели от #OpenAI#, #DeepSeek#, #Anthropic#, #Mistral#, #Meta#, #Cohere#, #AI21#, #Microsoft# и др.)
     #•# §¦~groq~@https://console.groq.com/playground@ (модели до 90b)
     #•# §¦~mistral~@https://docs.mistral.ai/getting-started/models/models_overview/@, ~codestral~@https://console.mistral.ai/codestral@
     #•# §¦~sambanova~@https://cloud.sambanova.ai/pricing@ (Llama <= 405b, DeepSeek, Qwen)
 #•# §¦На некоторых сервисах только часть моделей доступна бесплатно:
     #•# §¦~chutes~@https://chutes.ai/app@ (DeepSeek, Llama, Qwen, …)
     #•# §¦~openrouter~@https://openrouter.ai/models?q=:free@ (бесплатно все модели с суффиксом #:free#, в том числе ряд моделей от Google,
серии #llama#, #deepseek#, #qwen# и др. опенсорсные модели)
     #•# §¦~siliconflow~@https://docs.siliconflow.cn/reference/chat-completions-1@ (бесплатно - небольшие модели)
     #•# §¦~together.ai~@https://api.together.xyz/models@ (бесплатно - #meta-llama/Llama-3.3-70B-Instruct-Turbo-Free#, #meta-llama/Llama-Vision-Free#,
#deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free#)
 #•# §¦Некоторые сервисы дают возможность бесплатно пользоваться только сайтом, но в некоторых случаях возможно
задействовать их приватный API (указав Cookie и/или другие требуемые данные в заголовках):
     #•# §¦~cerebras~@https://cloud.cerebras.ai/@ (#llama-4-scout-17b-16e-instruct#, #llama-3.3-70b#, …, #deepseek-r1-distill-llama-70b#)
     #•# §¦~featherless~@https://featherless.ai/models@ (бесплатно - #featherless-ai/Qwerky-72B#, а также огромное количество моделей <15B)
     #•# §¦~fireworks.ai~@https://fireworks.ai/models@ (всевозможные OpenSource-модели)
     #•# §¦~lepton~@https://www.lepton.ai/playground@ (#llama3-3-70#, …, #mixtral-8x7b# и др.)
 #•# §¦Для полноты: пресеты для некоторых сервисов, для которых доступны пробные ключи:
     #•# §¦~ai21~@https://www.ai21.com/jamba@ (Jamba): $10 credit, 3mo trial
     #•# §¦~deepbricks~@https://deepbricks.ai/pricing@ (o1/o3/gpt-4o/3.5/claude-3.5-sonnet/llama): allows some usage with 0 balance
     #•# §¦~grok~@https://console.x.ai/@ от ~xAI~@https://x.ai/grok@
     #•# §¦~huggingface~@https://huggingface.co/models?other=text-generation-inference&inference=warm@ (в основном небольшие модели, но есть и такие как #Qwen2.5-72B-Instruct#,
#deepseek-ai/DeepSeek-R1-Distill-Qwen-32B#, #CodeLlama-34b-Instruct-hf#): $0.1 monthly
     #•# §¦~hyperbolic~@https://app.hyperbolic.xyz/models@ (OpenSource-модели: DeepSeek, Llama, Qwen): $10 credit for free trial
     #•# §¦~ncompass~@https://www.ncompass.tech/about@ (OpenSource-модели: Llama, Qwen, …): $1 free credits
     #•# §¦~novita.ai~@https://novita.ai/model-api/product/llm-api@ (OpenSource-модели): $0.5 credit

 Кроме того:

 #•# §¦#copilot-#/#gemini-proxy-public# позволяют попробовать соответствующие сервисы-адаптеры, упомянутые выше.
   §¦Примечание: #gemini# ~с некоторых пор~@https://developers.googleblog.com/en/gemini-is-now-accessible-from-the-openai-library/@
доступен и через OpenAI API.
 #•# §¦#keepass# позволяет держать свои собственные пресеты в базе ~KeePass~@https://keepass.info/@.
   §¦Подобным образом можно организовать работу и с другими аналогичными утилитами.

@=

 #Примечание#: задача перечислить все существующие сервисы не ставилась, это попросту невозможно,
не говоря о том, что каждый день могут появляться новые.

 Помимо самостоятельных провайдеров, можно встретить также сервисы не вполне понятного происхождения,
не имеющие даже официального сайта. Таким в списке выше является #tmrace#.

 По причине их неопределённого статуса пользоваться ими следует с осторожностью и не передавать чувствительные данные!

 Подобных сервисов довольно много, некоторые например перечислены тут: ~cool ai stuff!~@https://cas.zukijourney.com/@

@=

 Другие разделы справки: [~Описание~@Contents@], [~Диалог~@Dialog@], [~Установка~@Install@], [~Меню выбора провайдера~@ProvidersMenu@], [~i~@index@]


@index
$ #Index#

 #•# §¦~Ask AI – макрос для взаимодействия с ChatGPT (и другими LLM-сервисами) в FAR~@Contents@
     #•# §¦~Диалог~@Dialog@
         #•# §¦~Профили~@Profiles@
             #•# §¦Управление
             #•# §¦Использование
         #•# §¦~Работа с пресетами~@Presets@
     #•# §¦~Установка~@Install@
         #•# §¦Настройка
     #•# §¦~Меню выбора конфигурации провайдера~@ProvidersMenu@
         #•# §¦Обзор утилит
     #•# §¦~Обзор онлайн-сервисов~@Services@
         #•# §¦Выбор модели
         #•# §¦Обзор провайдеров
         #•# §¦Обзор пресетов для сервисов совместимых с OpenAI API