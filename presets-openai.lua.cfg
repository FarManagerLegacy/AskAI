name = "presets"
local applyParams = _import "lua-openai.lua.cfg"

local _,cfgpath = ...
local list = {}
far.RecursiveSearch(cfgpath, "*.preset", function (item)
  table.insert(list, item.FileName)
end)

predefined = {
  preset=list
}

local function mergeEnvAndLocals (subst)
  local level = 2
  local args = getfenv(level) -- parent __ENV
  for i=1,debug.getinfo(level, "u").nparams do
    local name,value = debug.getlocal(level, i)
    if value~=nil then
      args[subst[name] or name] = value
    end
  end
end

return function (session, stream, context, preset, apikey_, model_, temperature, role, headers) --luacheck: ignore 212
  _import(preset)
  mergeEnvAndLocals {
    apikey_ = "apikey",
    model_ = "model",
  }
  --luacheck: no global
  return applyParams(session, stream, context, apibase, apikey, model, temperature, role, frequency_penalty, logit_bias,
                     logprobs, top_logprobs, max_tokens, n, presence_penalty, response_format, seed, stop, top_p, headers)
end
